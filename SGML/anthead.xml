<project basedir="." default="dist" name="epubs">
  <property name="basedir" value="."/>
  <property name="xsl" value="/usr/share/xml/tei/stylesheet"/>
  <property name="tempPrefix" value="build"/>
  <property name="jing" value="lib/jing.jar"/>
  <property name="listgraphics" value="@{xsl}/tools/makegraphicsanttask.xsl"/>
  <tempfile property="temp.file" destDir="${java.io.tmpdir}" prefix="${tempPrefix}"/>
  <dirname property="outputTempDir" file="${temp.file}/ant"/>

  <import file="${xsl}/epub3/build-to.xml"/>

  <taskdef name="runjing" classpath="${jing}" classname="com.thaiopensource.relaxng.util.JingTask"/>
  
  <macrodef name="epub.check">
    <attribute name="epub"/>
    <sequential>
      <echo level="info">Epubcheck @{epub}</echo>
      <java jar="lib/epubcheck-3.0/epubcheck-3.0.jar" fork="true">
	<arg value="@{epub}" />
      </java>
    </sequential>
  </macrodef>
   
  <macrodef name="doconvert">
    <attribute name="name"/>
    <attribute name="prefix"/>
    <attribute name="dir"/>
    <attribute name="year"/>
    <attribute name="status"/>
    <sequential>
      <mkdir dir="@{dir}/Texts-XML/@{status}/@{prefix}"/>
      <mkdir dir="@{dir}/Texts-TEI/@{status}/@{prefix}"/>

      <echo>Running Perl ${basedir}/cleanSGML.pl on @{dir}/Texts-SGML/@{prefix}/@{name}.sgm</echo>
      <exec executable="perl" dir="${basedir}" input="@{dir}/Texts-SGML/@{prefix}/@{name}.sgm"
	    output="@{dir}/Texts-SGML/@{prefix}/@{name}.tmp"
	    failonerror="true" 	  logError="true">
	<arg value="${basedir}/cleanSGML.pl"/>
      </exec>

      <echo>Running osx SGML conversion on @{dir}/Texts-SGML/@{prefix}/@{name}.tmp</echo>
      <exec 
	  logError="true"
	  executable="osx" 
	  output="@{dir}/Texts-SGML/@{prefix}/@{name}.tmp2"
	  failonerror="true" >
	<arg value="-c${basedir}/catalog"/>
	<arg value="-d@{dir}/Texts-SGML/@{prefix}"/>
	<arg value="-xno-nl-in-tag"/>
	<arg value="-xcomment"/>
	<arg value="-xempty"/>
	<arg value="-xno-expand-internal"/>
        <arg value="@{dir}/Texts-SGML/@{prefix}/@{name}.tmp"/>
      </exec>
      <xslt force="yes" style="${basedir}/cleantcp.xsl"
	    in="@{dir}/Texts-SGML/@{prefix}/@{name}.tmp2"
	    out="@{dir}/Texts-XML/@{prefix}/@{status}/@{name}.xml">
	<factory name="net.sf.saxon.TransformerFactoryImpl"/>
        <param name="year" expression="@{year}"/>
      </xslt>
      <xslt force="yes" style="${xsl}/tcp/tcp2tei.xsl"
	    in="@{dir}/Texts-XML/@{prefix}/@{status}/@{name}.xml"
	    out="@{dir}/Texts-TEI/@{prefix}/@{status}/@{name}.xml">
	<factory name="net.sf.saxon.TransformerFactoryImpl"/>
      </xslt>
      <echo>Validate @{dir}/Texts-TEI/@{prefix}/@{status}/@{name}.xml</echo>
      <runjing rngfile="${basedir}/tcp.rng"
	       file="@{dir}/Texts-TEI/@{prefix}/@{status}/@{name}.xml"
	       failonerror="false"/>
     <delete file="@{dir}/Texts-SGML/@{prefix}/@{status}/@{name}.tmp"/>
     <delete file="@{dir}/Texts-SGML/@{prefix}/@{status}/@{name}.tmp2"/>

    </sequential>
  </macrodef>

  <macrodef name="doepub">
    <attribute name="name"/>
    <attribute name="dir"/>
    <attribute name="prefix"/>
    <sequential>
      <buildepubsimple in="@{dir}/@{prefix}/@{name}.xml" out="@{outdir}/@{prefix}/@{name}.epub" inDir="@{dir}"/>
      <delete includeEmptyDirs="true">
	<fileset dir="${outputTempDir}" includes="**/*"/>
      </delete>    
      <epub.check epub="@{outdir}/@{prefix}/@{name}.epub"/>
    </sequential>
  </macrodef>

  <macrodef name="dowordlist">
    <attribute name="name"/>
    <attribute name="dir"/>
    <attribute name="prefix"/>
    <sequential>
	<xslt force="yes" style="${xsl}/txt/tei-to-text.xsl" in="@{dir}/@{prefix}/@{name}.xml" out="@{outdir}/@{prefix}/@{name}.wordlist">
	<factory name="net.sf.saxon.TransformerFactoryImpl"/>
        <param name="oneword" expression="true"/>
      </xslt>
    </sequential>
  </macrodef>
  <target name="dist">

